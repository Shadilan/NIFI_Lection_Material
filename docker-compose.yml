version: '3'

networks:
  default:
    driver: bridge

services:
  registry:
    image: apache/nifi-registry:latest
    container_name: registry
    hostname: registry
    user: nifi
    networks: [ default ]
    ports:
      - "18080:18080"
    environment:
      - LOG_LEVEL=INFO
      - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/database
      - NIFI_REGISTRY_FLOW_PROVIDER=file
      - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/flow_storage
    volumes:
      - ./NIFI_REGISTRY/conf:/opt/nifi-registry/nifi-registry-current/conf
      - ./NIFI_REGISTRY/database:/opt/nifi-registry/nifi-registry-current/database
      - ./NIFI_REGISTRY/flow_storage:/opt/nifi-registry/flow_storage

  nifi:
    image: apache/nifi:latest
    container_name: nifi
    hostname: nifi
    user: nifi
    #restart: unless-stopped
    networks: [default]
    ports:
      - 8443:8443/tcp
    volumes:
      - nifi_database:/opt/nifi/nifi-current/database_repository
      - nifi_flowfile:/opt/nifi/nifi-current/flowfile_repository
      - nifi_content:/opt/nifi/nifi-current/content_repository
      - nifi_provenance:/opt/nifi/nifi-current/provenance_repository
      - nifi_state:/opt/nifi/nifi-current/state
      - nifi_logs:/opt/nifi/nifi-current/logs
      - ./NIFI/nars:/opt/nifi/nifi-current/nar_extensions
      - ./PG/drivers:/opt/nifi/drivers
      - ./NIFI/python:/opt/nifi/nifi-current/python_extensions
      - ./NIFI/source:/resource
    environment:
      SINGLE_USER_CREDENTIALS_USERNAME: admin
      # password must be 12 characters minimum
      SINGLE_USER_CREDENTIALS_PASSWORD: password1234567890
      NIFI_JVM_HEAP_INIT: 2048m
      NIFI_JVM_HEAP_MAX: 2048m
      NIFI_WEB_HTTPS_HOST: '0.0.0.0'
      NIFI_WEB_HTTPS_PORT: 8443

  postgres:
    image: postgres:latest
    container_name: postgres_container
    hostname: pg
    networks: [default]
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: postgres_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./PG/pgdata:/var/lib/postgresql/data/pgdata
      - ./PG/init.sql:/docker-entrypoint-initdb.d/create_db.sql
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    restart: unless-stopped
    tty: true
    stdin_open: true
  kafka:
    image: confluentinc/cp-kafka:latest # Or bitnami/kafka
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # For client connections
      - "9093:9093" # For controller communication (internal)
    environment:
      KAFKA_KRAFT_MODE: "true"
      CLUSTER_ID: q1Sh-9_ISia_zwGINzRvyQ
      KAFKA_PROCESS_ROLES: "controller,broker" # Or just "broker" if controllers are separate
      KAFKA_NODE_ID: 1 # Unique ID for this Kafka instance
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093" # Define controller voters
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/tmp/kraft-data" # Or a persistent volume mount
    volumes:
      - ./KAFKA/KRaft-data:/tmp/kraft-data # Mount a persistent volume for data
volumes:
  nifi_database:
  nifi_flowfile:
  nifi_content:
  nifi_provenance:
  nifi_state:
  nifi_logs: